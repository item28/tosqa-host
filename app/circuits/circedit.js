(function() {
  var ng;

  ng = angular.module('myApp');

  ng.directive('circuitEditor', function() {
    return {
      restrict: 'E',
      scope: {
        data: '='
      },
      link: function(scope, elem, attr) {
        var g, gadgetDrag, gadgets, svg;
        svg = d3.select(elem[0]).append('svg').attr({
          width: 900,
          height: 400
        });
        gadgetDrag = d3.behavior.drag().origin(Object).on('dragstart', function(d) {
          return this.parentNode.appendChild(this);
        }).on('drag', function(d) {
          d.x = d3.event.x;
          d.y = d3.event.y;
          return d3.select(this).attr({
            transform: function(d) {
              return "translate(" + d.x + "," + d.y + ")";
            }
          });
        }).on('dragend', function(d) {
          return console.log(d);
        });
        gadgets = svg.selectAll('.gadget').data(scope.data.gadgets);
        g = gadgets.enter().append('g').attr('class', 'gadget').call(gadgetDrag);
        g.append('rect').attr({
          width: 120,
          height: 80
        });
        g.append('text').text(function(d) {
          return d.title;
        }).attr({
          x: 5,
          y: 15
        });
        return gadgets.attr({
          transform: function(d) {
            return "translate(" + d.x + "," + d.y + ")";
          }
        });
      }
    };
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2lyY2VkaXQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBQSxFQUFBOztBQUFBLEVBQUEsRUFBQSxHQUFLLE9BQU8sQ0FBQyxNQUFSLENBQWUsT0FBZixDQUFMLENBQUE7O0FBQUEsRUFFQSxFQUFFLENBQUMsU0FBSCxDQUFhLGVBQWIsRUFBOEIsU0FBQSxHQUFBO1dBQzVCO0FBQUEsTUFBQSxRQUFBLEVBQVUsR0FBVjtBQUFBLE1BRUEsS0FBQSxFQUNFO0FBQUEsUUFBQSxJQUFBLEVBQU0sR0FBTjtPQUhGO0FBQUEsTUFLQSxJQUFBLEVBQU0sU0FBQyxLQUFELEVBQVEsSUFBUixFQUFjLElBQWQsR0FBQTtBQUNKLFlBQUEsMkJBQUE7QUFBQSxRQUFBLEdBQUEsR0FBTSxFQUFFLENBQUMsTUFBSCxDQUFVLElBQUssQ0FBQSxDQUFBLENBQWYsQ0FBa0IsQ0FBQyxNQUFuQixDQUEwQixLQUExQixDQUNKLENBQUMsSUFERyxDQUNFO0FBQUEsVUFBQSxLQUFBLEVBQU8sR0FBUDtBQUFBLFVBQVksTUFBQSxFQUFRLEdBQXBCO1NBREYsQ0FBTixDQUFBO0FBQUEsUUFHQSxVQUFBLEdBQWEsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFaLENBQUEsQ0FDWCxDQUFDLE1BRFUsQ0FDSCxNQURHLENBRVgsQ0FBQyxFQUZVLENBRVAsV0FGTyxFQUVNLFNBQUMsQ0FBRCxHQUFBO2lCQUNmLElBQUMsQ0FBQSxVQUFVLENBQUMsV0FBWixDQUF3QixJQUF4QixFQURlO1FBQUEsQ0FGTixDQUlYLENBQUMsRUFKVSxDQUlQLE1BSk8sRUFJQyxTQUFDLENBQUQsR0FBQTtBQUNWLFVBQUEsQ0FBQyxDQUFDLENBQUYsR0FBTSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQWYsQ0FBQTtBQUFBLFVBQ0EsQ0FBQyxDQUFDLENBQUYsR0FBTSxFQUFFLENBQUMsS0FBSyxDQUFDLENBRGYsQ0FBQTtpQkFFQSxFQUFFLENBQUMsTUFBSCxDQUFVLElBQVYsQ0FBWSxDQUFDLElBQWIsQ0FBa0I7QUFBQSxZQUFBLFNBQUEsRUFBVyxTQUFDLENBQUQsR0FBQTtxQkFBUSxZQUFBLEdBQVcsQ0FBQyxDQUFDLENBQWIsR0FBZ0IsR0FBaEIsR0FBa0IsQ0FBQyxDQUFDLENBQXBCLEdBQXVCLElBQS9CO1lBQUEsQ0FBWDtXQUFsQixFQUhVO1FBQUEsQ0FKRCxDQVFYLENBQUMsRUFSVSxDQVFQLFNBUk8sRUFRSSxTQUFDLENBQUQsR0FBQTtpQkFDYixPQUFPLENBQUMsR0FBUixDQUFZLENBQVosRUFEYTtRQUFBLENBUkosQ0FIYixDQUFBO0FBQUEsUUFjQSxPQUFBLEdBQVUsR0FBRyxDQUFDLFNBQUosQ0FBYyxTQUFkLENBQXdCLENBQUMsSUFBekIsQ0FBOEIsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUF6QyxDQWRWLENBQUE7QUFBQSxRQWdCQSxDQUFBLEdBQUksT0FBTyxDQUFDLEtBQVIsQ0FBQSxDQUFlLENBQUMsTUFBaEIsQ0FBdUIsR0FBdkIsQ0FBMkIsQ0FBQyxJQUE1QixDQUFpQyxPQUFqQyxFQUEwQyxRQUExQyxDQUFtRCxDQUFDLElBQXBELENBQXlELFVBQXpELENBaEJKLENBQUE7QUFBQSxRQWlCQSxDQUFDLENBQUMsTUFBRixDQUFTLE1BQVQsQ0FDRSxDQUFDLElBREgsQ0FDUTtBQUFBLFVBQUEsS0FBQSxFQUFPLEdBQVA7QUFBQSxVQUFZLE1BQUEsRUFBUSxFQUFwQjtTQURSLENBakJBLENBQUE7QUFBQSxRQW1CQSxDQUFDLENBQUMsTUFBRixDQUFTLE1BQVQsQ0FBZ0IsQ0FBQyxJQUFqQixDQUFzQixTQUFDLENBQUQsR0FBQTtpQkFBTyxDQUFDLENBQUMsTUFBVDtRQUFBLENBQXRCLENBQ0UsQ0FBQyxJQURILENBQ1E7QUFBQSxVQUFBLENBQUEsRUFBRyxDQUFIO0FBQUEsVUFBTSxDQUFBLEVBQUcsRUFBVDtTQURSLENBbkJBLENBQUE7ZUFzQkEsT0FBTyxDQUFDLElBQVIsQ0FBYTtBQUFBLFVBQUEsU0FBQSxFQUFXLFNBQUMsQ0FBRCxHQUFBO21CQUFRLFlBQUEsR0FBVyxDQUFDLENBQUMsQ0FBYixHQUFnQixHQUFoQixHQUFrQixDQUFDLENBQUMsQ0FBcEIsR0FBdUIsSUFBL0I7VUFBQSxDQUFYO1NBQWIsRUF2Qkk7TUFBQSxDQUxOO01BRDRCO0VBQUEsQ0FBOUIsQ0FGQSxDQUFBO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJuZyA9IGFuZ3VsYXIubW9kdWxlICdteUFwcCdcblxubmcuZGlyZWN0aXZlICdjaXJjdWl0RWRpdG9yJywgLT5cbiAgcmVzdHJpY3Q6ICdFJ1xuICBcbiAgc2NvcGU6XG4gICAgZGF0YTogJz0nXG4gICAgXG4gIGxpbms6IChzY29wZSwgZWxlbSwgYXR0cikgLT5cbiAgICBzdmcgPSBkMy5zZWxlY3QoZWxlbVswXSkuYXBwZW5kICdzdmcnXG4gICAgICAuYXR0ciB3aWR0aDogOTAwLCBoZWlnaHQ6IDQwMFxuICAgIFxuICAgIGdhZGdldERyYWcgPSBkMy5iZWhhdmlvci5kcmFnKClcbiAgICAgIC5vcmlnaW4gT2JqZWN0XG4gICAgICAub24gJ2RyYWdzdGFydCcsIChkKSAtPlxuICAgICAgICBAcGFyZW50Tm9kZS5hcHBlbmRDaGlsZCBAICMgcHV0IHRoaXMgZ2FkZ2V0IG9uIHRvcFxuICAgICAgLm9uICdkcmFnJywgKGQpIC0+XG4gICAgICAgIGQueCA9IGQzLmV2ZW50LnhcbiAgICAgICAgZC55ID0gZDMuZXZlbnQueVxuICAgICAgICBkMy5zZWxlY3QoQCkuYXR0ciB0cmFuc2Zvcm06IChkKSAtPiBcInRyYW5zbGF0ZSgje2QueH0sI3tkLnl9KVwiXG4gICAgICAub24gJ2RyYWdlbmQnLCAoZCkgLT5cbiAgICAgICAgY29uc29sZS5sb2cgZCAjIFRPRE86IHNhdmUgdG8gc2VydmVyXG5cbiAgICBnYWRnZXRzID0gc3ZnLnNlbGVjdEFsbCgnLmdhZGdldCcpLmRhdGEoc2NvcGUuZGF0YS5nYWRnZXRzKVxuICBcbiAgICBnID0gZ2FkZ2V0cy5lbnRlcigpLmFwcGVuZCgnZycpLmF0dHIoJ2NsYXNzJywgJ2dhZGdldCcpLmNhbGwoZ2FkZ2V0RHJhZylcbiAgICBnLmFwcGVuZCgncmVjdCcpXG4gICAgICAuYXR0ciB3aWR0aDogMTIwLCBoZWlnaHQ6IDgwXG4gICAgZy5hcHBlbmQoJ3RleHQnKS50ZXh0IChkKSAtPiBkLnRpdGxlXG4gICAgICAuYXR0ciB4OiA1LCB5OiAxNVxuXG4gICAgZ2FkZ2V0cy5hdHRyIHRyYW5zZm9ybTogKGQpIC0+IFwidHJhbnNsYXRlKCN7ZC54fSwje2QueX0pXCJcbiJdfQ==
